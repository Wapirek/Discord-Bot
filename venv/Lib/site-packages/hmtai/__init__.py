"""
hmtai is an Anime / Hentai (NSFW) Image API which simplifies how you fetch random images from the local libraries!\n
More features and functions will be added soon! \n
Will be i updating this API? Of course nyse, dude, but this API has a 17.750 NSFW picture, and 315 SFW picture. 18 066 total. All picture we added manually.
"""
import json
import random
import os

def credits():
    """
Credits
Last updated: 2021.07.16 (YY/MM/DD)
    """
    print("\033[90m[?] \u001b[0mHMtai python port made by N!ckSâˆ†1tF0x")
    print("\033[90m[?] \u001b[0mOriginal package by \033[94mMikune Hatsune\u001b[0m")


def useHM(version = None, category = None):
        """
Default Function of this package\n
All information about versions and categories is contained in official docs\n
-----------------------------------\n
Returns url in str\n
        """
        answ = "erroor"
        if category == None:
            return "Please, enter category from library. More about this read in package docs here: https://docs.l0calserve4.ml/v/english/hmtai-port-api/hmtai-port-guide#content-list"
        elif version == None:
            return "Please, enter library version. Current version of package contains versions:\n'1', '2', '2_4', '2_6', '2_9', 'dlc'"

        if version == "1":
            with open(f'{os.path.dirname(__file__)}/hmtai_libv1/{category}.json') as json_file:
                hmtaiLib = json.load(json_file)
            answ = random.choice(hmtaiLib)
        if version == "2":
            with open(f'{os.path.dirname(__file__)}/hmtai_libv2/{category}.json') as json_file:
                hmtaiLib = json.load(json_file)
            answ = random.choice(hmtaiLib)
        if version == "2_4":
            with open(f'{os.path.dirname(__file__)}/hmtai_libv2_4/{category}.json') as json_file:
                hmtaiLib = json.load(json_file)
            answ = random.choice(hmtaiLib)
        if version == "2_6":
            with open(f'{os.path.dirname(__file__)}/hmtai_libv2_6/{category}.json') as json_file:
                hmtaiLib = json.load(json_file)
            answ = random.choice(hmtaiLib)
        if version == "2_9":
            with open(f'{os.path.dirname(__file__)}/hmtai_libv2_9/{category}.json') as json_file:
                hmtaiLib = json.load(json_file)
            answ = random.choice(hmtaiLib)
        if version == "dlc":
            with open(f'{os.path.dirname(__file__)}/hmtai_libv0_dlc/{category}.json') as json_file:
                hmtaiLib = json.load(json_file)
            answ = random.choice(hmtaiLib)

        return answ

# I will return to it after next official npm update
# If you read this, please, help meh with that shiiii plzzz - Thny Awec

def listHM(version = None):
    """
Get list of all categories in versions\n
-----------------------------------\n
Returns names in str\n
Only for developing, don't use it in bots, ok?\n
    """
    answ = "erroor"
    if version == None:
            return "Please, enter library version. Current version of package contains versions:\n'1', '2', '2_4', '2_6', '2_9', 'dlc'"

    if version == "1":
        path = f"{os.path.dirname(__file__)}/hmtai_libv1/"
        files = [os.path.splitext(filename)[0] for filename in os.listdir(path)]
        answ = f"All categories in {version}: {files}"

    if version == "2":
        path = f"{os.path.dirname(__file__)}/hmtai_libv2/"
        files = [os.path.splitext(filename)[0] for filename in os.listdir(path)]
        answ = f"All categories in {version}: {files}"

    if version == "2_4":
        path = f"{os.path.dirname(__file__)}/hmtai_libv2_4/"
        files = [os.path.splitext(filename)[0] for filename in os.listdir(path)]
        answ = f"All categories in {version}: {files}"

    if version == "2_6":
        path = f"{os.path.dirname(__file__)}/hmtai_libv2_6/"
        files = [os.path.splitext(filename)[0] for filename in os.listdir(path)]
        answ = f"All categories in {version}: {files}"

    if version == "2_9":
        path = f"{os.path.dirname(__file__)}/hmtai_libv2_9/"
        files = [os.path.splitext(filename)[0] for filename in os.listdir(path)]
        answ = f"All categories in {version}: {files}"

    if version == "dlc":
        path = f"{os.path.dirname(__file__)}/hmtai_libv0_dlc/"
        files = [os.path.splitext(filename)[0] for filename in os.listdir(path)]
        answ = f"All categories in {version}: {files}"


    return answ
